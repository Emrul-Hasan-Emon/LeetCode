class WordDictionary {
    unordered_map<int, vector<string>>m;
    
    bool isEqual(string s, string t)
    {
        for(int i=0; i<s.size(); i++)
        {
            if(t[i]=='.')
                continue;
            if(s[i]!=t[i])
                return false;
        }
        return true;
    }
    
    public:
    WordDictionary() {
     
    }
    
    
    void addWord(string word) {
        m[word.size()].push_back(word);
    }
    
    bool search(string word) {
        for(auto it: m[word.size()])
             if(isEqual(it, word))
                 return true;
        return false;
    }
};

/**
 * Your WordDictionary object will be instantiated and called as such:
 * WordDictionary* obj = new WordDictionary();
 * obj->addWord(word);
 * bool param_2 = obj->search(word);
 */
