class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        
        long long n, m, i, j;
        
        n=obstacleGrid.size();
        m=obstacleGrid[0].size();
        long long a[n+5][m+5];
        
        if(obstacleGrid[0][0]==1 || obstacleGrid[n-1][m-1]==1)
            return 0;
        
        for(i=0; i<n; i++)
        {
            for(j=0; j<m; j++)
            {
                a[i][j]=0;
            }
        }
        
        for(i=0; i<n; i++)
        {
            for(j=0; j<m; j++)
            {
                
                if(i==0)
                {
                    if(obstacleGrid[i][j]==1)
                        break;
                    a[i][j]=a[i+1][j]=1;
                }
                else
                {
                    if(obstacleGrid[i][j]==1)
                    {
                        a[i][j]=0;
                        continue;
                    }
                    a[i][j+1]+=a[i][j];
                    a[i+1][j]+=a[i][j];
                }
            }
        }
        
        return a[n-1][m-1];
    }
};
